package Agivdel.XO;

/**
 * Крестики-нолики с проверкой ИИ вероятностей победы для каждого хода.
 * Используем две таблицы: одно- и двухмерный массивы.
 * Все игровое поле (все массивы) делится на клетки (9*cell).
 * В 2-м. массиве (таблица подсчета шансов OddsTable) каждая клетка делится на линии (4*line).
 * Каждая линия (объект класса OddsLine) содержит поля:
 * 1) odds: это степень заполнения одной игровой вертикали/горизонтали/диагонали в долях от трех
 * (odds = 1 означает заполненную на одну третью какую-либо вертикаль/горизонталь/диагональ,
 * проходящюю через клетку), отдельно для крестиков и для ноликов.
 * 2) indexLine: индексная строка, содержащая три цифры, соответствующие трем клеткам,
 * входящих в определенную вертикаль/горизонталь/диагональ (индекс "678" означает три верхних
 * горизонтальных клетки игрового поля, "048" - диагональ из нижнего левого угла в верхний правый).
 * <p>
 * В зависимости от числа всех вертикалей/горизонталей/диагоналей), проходящих через клетку,
 * линий в каждой клетке может быть 2 (центральные клетки сторон), 3 (угловые клетки) или 4 (центральная клетка).
 * <p>
 * При прочих равных для выигрыша нужно заполнять клетки, в которых либо больше степень заполнения одной из линий
 * (например, одна линия, заполненная на две третьих), либо больше линий одинаковой степени заполнения
 * (например, две линии, заполненные на одну треть).
 * Если клетки имеют равное число линий с одинаковой степенью заполнения, выбирать можно любую из этих клеток.
 * <p>
 * Если противник имеет в какой-либо клетке линию со степенью заполнения, равной 2, это значит,
 * что для выигрыша ему нужно поставить в данную клетку свой знак.
 * Соответственно, противник может поставить свой знак в эту клетку, чтобы не допустить выигрыш другого игрока.
 */

public class XO2 {

    public static void main(String[] args) {
        new Run().start();
    }
}

